# -*- coding: utf-8 -*-
"""PDI_ Tratamento de dados.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Qfrtyv2m3QmlGqBkN3tEg1GEvrUydlXE

# *Carregar o Conjunto de Dados*

Primeiro importamos as bibliotecas necessárias

 Este trecho lê os dados para um DataFrame, que é uma estrutura de dados usada pelo pandas, uma biblioteca de manipulação de dados.

 IMDb Movies Dataset disponível no Kaggle.
"""

import pandas as pd

df = pd.read_csv('/content/imdb_top_1000.csv')

df.head()

"""# *Limpar e Preparar os Dados*
Verificando se há valores ausentes e tratando eles.
Também, convertendo colunas para os tipos de dados corretos, se necessário.
"""

df.isnull().sum()

df = df.dropna()

df.dropna(subset=['Genre', 'Released_Year'], inplace=True)

df = df[df['Released_Year'].apply(lambda x: x.isnumeric())]
df['Released_Year'] = df['Released_Year'].astype(int)

"""# *Analisar a Distribuição de Classificações por Gênero*

Crie visualizações para entender melhor a distribuição das classificações dos filmes por gênero.*texto em itálico*

"""

import matplotlib.pyplot as plt #graficos
import seaborn as sns #interface para os graficos

df['Primary_Genre'] = df['Genre'].apply(lambda x: x.split(', ')[0] if pd.notna(x) else x)

primary_genre_counts = df['Primary_Genre'].value_counts()

plt.figure(figsize=(14, 6))
sns.barplot(x=primary_genre_counts.index, y=primary_genre_counts.values, palette='viridis')
plt.title('Distribuição de Filmes por Gênero Primário')
plt.xlabel('Gênero Primário')
plt.ylabel('Quantidade de Filmes')
plt.xticks(rotation=45)
plt.show()

"""# *Analisar Tendências ao Longo do Tempo*
Veja como as classificações dos filmes mudaram ao longo dos anos.

"""

df['Decade'] = (df['Released_Year'] // 10) * 10

ratings_by_decade = df.groupby('Decade')['IMDB_Rating'].mean()

plt.figure(figsize=(10, 6))
sns.barplot(x=ratings_by_decade.index, y=ratings_by_decade.values, palette='viridis')
plt.title('Média das Classificações dos Filmes por Década')
plt.xlabel('Década')
plt.ylabel('Média da Classificação')
plt.show()