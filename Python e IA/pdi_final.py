# -*- coding: utf-8 -*-
"""PDI final.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1hDug7oGL86hQP2x3oR7vv0QulxHgyLII
"""

import numpy as np
import matplotlib.pyplot as plt
from tensorflow import keras
from tensorflow.keras import layers

data = np.array([[0, 0], [0, 1], [1, 0], [1, 1] ])

labels = np.array([0, 0, 0, 1])

model = keras.Sequential([layers.Dense(1, input_dim=2, activation='sigmoid') ])


model.compile(optimizer='sgd', loss='binary_crossentropy', metrics=['accuracy'])

model.fit(data, labels, epochs=10, verbose=1)


performance = model.evaluate(data, labels)
print("Perda e Acurácia  do modelo:", performance)

weights = model.layers[0].get_weights()[0]
bias = model.layers[0].get_weights()[1]

plt.figure(figsize=(6, 6))
plt.scatter(data[:, 0], data[:, 1], c=labels, cmap='viridis', s=100, edgecolors='k')

x = np.linspace(-0.1, 1.1, 100)
y = (-weights[0][0] * x - bias) / weights[1][0]
plt.plot(x, y, color='red')

plt.title('Visualização da Separação do Perceptron')
plt.xlabel('Feature 1')
plt.ylabel('Feature 2')
plt.xlim(-0.1, 1.1)
plt.ylim(-0.1, 1.1)
plt.grid(True)
plt.show()